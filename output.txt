****** Grmmar Rules ******
program : moduleDeclarations otherModules driverModule otherModules
moduleDeclarations : moduleDeclaration moduleDeclarations
moduleDeclarations : EMPTY
moduleDeclaration : DECLARE MODULE ID SEMICOL
otherModules : module otherModules
otherModules : EMPTY
driverModule : DRIVERDEF DRIVER PROGRAM DRIVERENDDEF moduleDef
module : DEF MODULE ID ENDDEF TAKES INPUT SQBO input_plist SQBC SEMICOL ret moduleDef
ret : RETURNS SQBO output_plist SQBC SEMICOL
ret : EMPTY
input_plist : ID COLON dataType input_plistNew
input_plistNew : COMMA ID COLON dataType input_plistNew
input_plistNew : EMPTY
output_plist : ID COLON type output_plistNew
output_plistNew : COMMA ID COLON type output_plistNew
output_plistNew : EMPTY
type : INTEGER
type : REAL
type : BOOLEAN
dataType : type
dataType : ARRAY SQBO range SQBC OF type
moduleDef : START statements END
statements : statement statements
statements : EMPTY
statement : ioStmt
statement : simpleStmt
statement : declareStmt
statement : condionalStmt
statement : iterativeStmt
ioStmt : GET_VALUE BO ID whichId BC SEMICOL
ioStmt : PRINT BO expression BC SEMICOL
whichId : SQBO index SQBC
whichId : EMPTY
index : NUM
index : ID
simpleStmt : assignmentStmt
simpleStmt : modulereuseStmt
assignmentStmt : ID whichId ASSIGNOP expression SEMICOL
modulereuseStmt : optional USE MODULE ID WITH PARAMETERS idList SEMICOL
optional : SQBO idList SQBC ASSIGNOP
optional : EMPTY
idList : ID idListNew
idListNew : COMMA ID idListNew
idListNew : EMPTY
expression : arithOrBoolExpr
expression : MINUS BO arithmeticExpr BC
expression : PLUS BO arithmeticExpr BC
expression : PLUS var
expression : MINUS var
arithOrBoolExpr : relopExpr arithOrBoolExprNew
arithOrBoolExprNew : logicalOp relopExpr arithOrBoolExprNew
arithOrBoolExprNew : EMPTY
relopExpr : arithmeticExpr relopExprNew
relopExprNew : relationalOp arithmeticExpr relopExprNew
relopExprNew : EMPTY
arithmeticExpr : term arithmeticExprNew
arithmeticExprNew : pm term arithmeticExprNew
arithmeticExprNew : EMPTY
term : factor termNew
termNew : md factor termNew
termNew : EMPTY
factor : BO arithmeticExpr BC
factor : var
var : ID whichId
var : NUM
var : RNUM
var : TRUE
var : FALSE
pm : PLUS
pm : MINUS
md : MUL
md : DIV
logicalOp : AND
logicalOp : OR
relationalOp : LT
relationalOp : LE
relationalOp : GT
relationalOp : GE
relationalOp : EQ
relationalOp : NE
declareStmt : DECLARE idList COLON dataType SEMICOL
condionalStmt : SWITCH BO ID BC START caseStmts default END
caseStmts : CASE value COLON statements BREAK SEMICOL caseStmtsNew
caseStmtsNew : CASE value COLON statements BREAK SEMICOL caseStmtsNew
caseStmtsNew : EMPTY
value : NUM
value : TRUE
value : FALSE
default : DEFAULT COLON statements BREAK SEMICOL
default : EMPTY
iterativeStmt : FOR BO ID IN range BC START statements END
iterativeStmt : WHILE BO arithOrBoolExpr BC START statements END
range : NUM RANGEOP NUM
program :
program :
program :
program :
program :
program :
program :
