declare module compute;
<<<driver program>>>
start
	declare var_1_, var_2_, var_3_:integer;
	declare R1_abc: boolean;
	declare r2_ABC: integer;
	declare R3_abc: real;
	get_value(var_1_);
	var_2_:=10;
	var_3_:= -6;
	[R1_abc, r2_ABC, R3_abc] := use module compute with parameters var_1_, var_2_, var_34;
	** do not bother that the last variable is not declared It will be taken care of later**
end
<<module compute>>
takes input[a:integer, b:integer, c:integer];
returns [res_1:boolean, res_2_a:integer, res_2__b:real];
start
	declare b:boolean;
	res_2_a:= (a*b-c/5);
	res_2__b:= ((res_2_a + a))/13;
	b :=((a <=  b) AND c >= a)OR (a<0);
	res_1:= ((b AND c==b)OR(b AND (a<=c)));
	** check  rules 27 a to e and redefine to preserve the parentheses needs ** 
	print(res_1);
end
<<module arraySum>>
takes input[list:real, n:integer];
returns  [sum:real];
start
	declare index:integer;
	declare t:boolean;
	sum:=0.0;
	for(index in  1..15)
	start
		t:= index<=n;
		start
			declare index:boolean
			start
				print(index)
			end
		end
		
	end
	print(sum);
end
